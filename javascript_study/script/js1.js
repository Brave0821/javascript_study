// 객체 메서드 
//  수업 노션에 기초 관련해서 전부 이해
/* (Vanilla JS)가장 중요! - > 라이브러리 사용가능. 
js
1. 목적 설정  
e돋보기가 사라짐 - > 검색버튼을 눌었을 때 검색상세창이 상단에 팝업으로 뜬다. 
- > 검색버튼 변수지정 - > 눌었으,ㄹ때 이벤트 만들기 상세창에 변수로 만들기 상단에 팝업으로 실행 메서드로 만들기.  

객체or변수 : js에서 동적으로 제어하기 위한 모든 대상 
(변수) 메뉴가 나타난다. 
동적인 대상 관람 참여 변수 돋보기 검색 팝업이 뜬다.
객체 대상 변수 
class id가 객체도 됨 

속성 : 관람참여 속성 객체가 고유하게 가지고 있는 고유 속성 추가 속성.
a href가 고유속성, 상황에 따라 class id title 등등 추가속성.

이벤트 : 사용자의 모든 동작 행위를 이벤트 클릭 등등 사이트에 접속했을때 동작에 따라 이벤트에 따라 마우스 올렸을떄 나온다. 
돋보기를 클릭한다 클릭 동작 이벤트.   
(사용자가 웹에서 하는 모든 행위 접속 들어갔다. 마우스 조작 키보드 조작 손가락 조작)

메서드() : 객체를 활용한 실행 결과 funtion() 뭔가가 실행된다.() 
모든 목적의 가장 끝 

상황1. 장바구니를 클릭하면 메뉴가 나오고 메인을 클릭하면 메뉴가 닫힌다.

객체를 클릭하면 클릭 이벤트 발생 후 팝업(메뉴가 떳다. 메서드) 
메서드의 결과 배경 객체를 누르면 이벤트 발생하고 팝업 객체가 사라진다.

객체 (하얀팝업 메뉴) 까만 팝업 배경 객체를 누르면 

상황2. 
패밀리 사이트 객체를 누르면(이벤트) 
객체 메뉴가 서서히 올라온다. css opacity trancy (메서드) 

1객체를 2이벤트로 누르면 3메서드로 회전된다. 

객체를 다시 누르면 (이벤트) 
객체가 사라진다.(메서드) 

객체.이벤트(
    객체(화살표).속성(돌아간다.).메서드(실행)
    객체.메서드(화면이 뜬다.)

)

상황3
이미지가 5초마다 넘어간다.

객체가 메서드로 넘어간다.
(이벤트는 내 동작으로 하는 것 이기에 혼자 움직이기에 메서드 진행 중 )

객체에서 메서드로 바로 이뤄지면 
- > 객체.메서드()


tv에 마우스 올리면 tv 관련 
pc에 마우스 올리면 pc 관련 

tv 객체에 마우스를 올리면(이벤트) tv 관련 메뉴(객체가 보인다 메서드)
마우스를 옮기면 객체가 사라진다 (메서드)
pc에 올리면 


상황4 
로그인창 객체에 비밀번호찾기 클릭 이벤트 - > 화얀 로그인화면 뒤에 까만애 객체가 사라진다. 메서드 - > 
새로운 객체 하안애랑 까만애가 다시 나타난다. 메서드   

새로운창이 뜬다. 메서드
뜨면서 기본 검은 배경 객체와 로그인 객체가 사라진다 메서드


완성 후 기능적으로 수정 후 개선 후 


1 - 6 이동 
내리면  

화면 객체를 아무대나 대고 스트롤 휠을 내리면 이벤트하면 객체가 바뀐다. 넘어가서 보이는게 메서드 


화살표 오른쪽 누르면 아이템과 숫자가 바뀐다.

화살표 객체를 누르면(이벤트) 메서드가 실행되어 객체가 나온다.
화면과 상품번호 숫자가 메서드 된다.


휴지통기능.

휴지통 객체를 누르면(이벤트) 아이템 객체가 사라진다.(메서드)
아이템이 휴지통을 가지기에 휴지통을 누르면 사라진다.
모든 아이템이 없어지면 장바구니가 사라진다.


객체 상품에 이름을 올리면 
마우스를 올리면이벤트 왼쪽 텍스트 객체 메서드 글자가 바뀐다.
객체가 다시 돌아온다 메서드

*/

/* 변수와 배열 객체 

문자 숫자 널 (의도성) 언디(의도 x )

var let처럼 불가능 

let 변수 선언 가능 

1. 사용하려는 객체는 반드시 변수에 저장하고 진행해야 한다.!! 
2. 
*/

/* let a; */ /* undifind */
/* let b = a; */ /* a - > b로  */
// let b = `a`; 문자 a 

let a = 10;
let b = "10";
let c = 1;

a = b+c // 10,1 101 문자 + 숫자 - > 문자가 된다. 
a =+ a // 101101 문자 + 문자 101 101  
// 
b = c; // 
a += b // 10110111 
console.log("js는 중간값이 중요하고 쓰는 이유는 중간 결과를 알아야하기에!")
// a 콘솔창에 쓰면 최종결과만 보인다. 

b = a+b+c; // 101101 11 11 
// 배열 
const array = [1,2,3,4,5]

c = c+array[2] // 4
// 0에서 시작해서 

const x = 10;
const y = 5;

function ca() {
    console.log(c+array[4]+array[0]); //10
}

function xy(){
    console.log(x+y-1); // 14
    console.log(x+(y-1)); /* () 괄호부터 처리. */
    ca() //10
} /* 1. 생성 */

/*  생성 호출 따로. */
// ca 그 자체에 생성 밖이면 된다. xy 함수 안에도 가능.!
// 해당 함수의 밖이면 어디든 상관없다. 다른 함수 안이라도.

xy() /* 2. 호출 함수 내에서 하면 안된다.*/

const cart = {
    img:"./img/model.jsp",
    sale: "50% OFF",
    name: "Crop Top",
    fit_sizw: "Body Fit",
    color: ["Mineral Black","Chocolate Brown","Cobalt Blue/Iris Blue","Gymshark Womens"],
    size: ["XS","S","M","L","XL","XXL"],
    price:27.50,
    price_original:55,
    num:1,
}


console.log(cart);
console.log(cart.name);
console.log(cart.color[1]); /* 주문하고 싶은 번호 0 */
console.log();
// 칼라와 사이즈는 배열로 종류가 많다.
// 배열은 값이 2개 이상일때 사용

/*=-=--=-=--=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
                <js에서 사용하는 괄호모양 정리>   


대괄호 [] ->

* 배열 생성, : let 변수명= [배열값, 배열값,] 
* 배열 인덱스 호출 : 변수명 [인덱스]
dom : (2개 이상의 dom선언 후 ) dom변수명[인덱스]                  
불러온 dom 객체가 2개 이상일때 인덱스 호출용




--------------------------------------------------------------
중괄호 {} ->

함수 실행 값(){실행값},                                           
객체선언(속성 값 묶을때), 
let const 등 let object = {속성 : 값, 속성 : 값 [값1],[값2],[값3]}
괄호 안에 배열도 가능.
*function(){} - 중요

--------------------------------------------------------------
소괄호 () ->

메서드 옆에, 연산자 우선순위, 배열 빈공간, 2개이상 배열선언할때, 함수
메서드 : 객체.메서드();
연산자 : 1+(1-2) 먼저 계산하는거 괄호 안
* 배열 빈공간 : newArray(2) 값이 하나 일때  빈공간으로 인식.
* 배열 선언 : newArray(1,2) 0인덱스에 1 1인덱스에 2가 들어간다. 
|함수 : function()                                                 
=-=--=-=--=-=-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--
*/

